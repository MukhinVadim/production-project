name: Main workflow
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          retention-days: 7
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          yarn install --force --non-interactive
  lint-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run lint
        run: |
          yarn lint
      - name: Run style-lint
        run: |
          yarn stylelint
  ui-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run test
        run: |
          yarn sb:build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: storybook-static
          path: storybook-static
          retention-days: 1
      - name: Run test
        run: |
          yarn test:ui:ci
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run test
        run: |
          yarn test:unit --ci
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]
    needs: [lint-format, unit-test, ui-tests]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Create .env file
        run: |
          touch .env
          echo API_KEY=${{ secrets.API_KEY }} >> .env
          echo AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }} >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
          echo STORAGE_BUCKED=${{ secrets.STORAGE_BUCKED }} >> .env
          echo MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }} >> .env
          echo APP_ID=${{ secrets.APP_ID }} >> .env
          cat .env      
      - name: Run build
        run: |
          yarn build:prod
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
  deploy:
    runs-on: ubuntu-latest
    needs: 'build'
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
